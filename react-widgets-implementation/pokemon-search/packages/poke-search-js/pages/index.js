import { useEffect, useRef, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import PokeCard from "../components/PokeCard";

import styles from "../styles/Home.module.css";

class NotFoundError extends Error {
    constructor(message='') {
        super(message);
    }
}

class Pokemon {
    constructor(name='', height=0, imageURL='') {
        this.name = name
        this.height = height
        this.imageURL = imageURL
    }
}

export default function Home() {

    // Other than using a state to control the form input,
    // we can useRef to reference it so that the page doesn't render repeatedly every time we type
    const inputRef = useRef(null)
    
    const [userInput, setUserInput] = useState('')
    const [pokemon, setPokemon] = useState(new Pokemon())

    const formOnSubmit = e => {
        e.preventDefault()
        setUserInput(inputRef.current.value)
    }

    const clearOnClick = () => {
        inputRef.current.value = ''
        setUserInput('')
        setPokemon(new Pokemon())
    }

    const searchOnClick = () => {
        setUserInput(inputRef.current.value)
    }

    useEffect(() => {
        async function fetchPokamon() {
            if (userInput.length === 0) {
                return
            }

            try {
                const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${userInput}`)
                
                // response.ok means the result is successful - status in the range 200-299
                // meaning that we can also use response.status here to check
                if (!resp.ok) {
                    throw new NotFoundError()
                }
                const data = await resp.json()

                const name = data.name ?? ''
                const height = data.height ? data.height * 10 : 0
                const imageURL = data.sprites.back_default ?? ''
                setPokemon(new Pokemon(name, height, imageURL))

            } catch (error) {
                if (error instanceof NotFoundError) {
                    alert('Not found')
                } else {
                    alert('Unexpected Error Occurred')
                }
            }
            
        }
        fetchPokamon()
    }, [userInput])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to PokéSearch</h1>
        
        <form onSubmit={formOnSubmit}>
            <input ref={inputRef}/>
        </form>

        <div className={styles['buttons-on-line']}>
            <button onClick={clearOnClick}>Clear</button>
            <button onClick={searchOnClick}>Search</button>
        </div>
        
        {pokemon.name.length > 0 && <PokeCard pokemon={pokemon}/>}

      </main>

      <footer className={styles.footer}>
        <a href="https://pokeapi.co/" target="_blank" rel="noopener noreferrer">
          Powered by{" "}
          <span className={styles.logo}>
            <Image
              src="/pokeapi.png"
              alt="PokéApi Logo"
              width={105}
              height={42}
            />
          </span>
        </a>
      </footer>
    </div>
  );
}
